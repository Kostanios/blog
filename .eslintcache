[{"H:\\blog\\blog\\src\\index.js":"1","H:\\blog\\blog\\src\\reportWebVitals.js":"2","H:\\blog\\blog\\src\\redux\\store.js":"3","H:\\blog\\blog\\src\\redux\\slices\\dataSlice.js":"4","H:\\blog\\blog\\src\\const\\reducers.js":"5","H:\\blog\\blog\\src\\api\\const.js":"6","H:\\blog\\blog\\src\\const\\path.js":"7","H:\\blog\\blog\\src\\redux\\slices\\authSlice.js":"8","H:\\blog\\blog\\src\\util\\deleteCookie.js":"9","H:\\blog\\blog\\src\\util\\emailIsValid.js":"10","H:\\blog\\blog\\src\\const\\errors.js":"11","H:\\blog\\blog\\src\\App.jsx":"12","H:\\blog\\blog\\src\\components\\Header\\index.jsx":"13","H:\\blog\\blog\\src\\components\\Collection\\index.jsx":"14","H:\\blog\\blog\\src\\components\\MainPage\\index.jsx":"15","H:\\blog\\blog\\src\\components\\Regist\\index.jsx":"16","H:\\blog\\blog\\src\\components\\Login\\index.jsx":"17","H:\\blog\\blog\\src\\components\\Profile\\index.jsx":"18","H:\\blog\\blog\\src\\components\\ArticleInitPage\\index.jsx":"19","H:\\blog\\blog\\src\\components\\ArticleView\\index.jsx":"20","H:\\blog\\blog\\src\\components\\Pagin\\index.jsx":"21","H:\\blog\\blog\\src\\components\\Article\\index.jsx":"22","H:\\blog\\blog\\src\\util\\getCookie.js":"23","H:\\blog\\blog\\src\\api\\Data.js":"24","H:\\blog\\blog\\src\\api\\Auth.js":"25","H:\\blog\\blog\\src\\routes\\ProfilePrivateRoute.jsx":"26","H:\\blog\\blog\\src\\routes\\ArticleInitPagePrivateRoute.jsx":"27"},{"size":500,"mtime":1612348727462,"results":"28","hashOfConfig":"29"},{"size":374,"mtime":1610732302624,"results":"30","hashOfConfig":"29"},{"size":295,"mtime":1611237250775,"results":"31","hashOfConfig":"29"},{"size":4054,"mtime":1612360069203,"results":"32","hashOfConfig":"29"},{"size":616,"mtime":1612334071891,"results":"33","hashOfConfig":"29"},{"size":63,"mtime":1611247075614,"results":"34","hashOfConfig":"29"},{"size":201,"mtime":1611579529060,"results":"35","hashOfConfig":"29"},{"size":4544,"mtime":1612360203482,"results":"36","hashOfConfig":"29"},{"size":102,"mtime":1611491800683,"results":"37","hashOfConfig":"29"},{"size":68,"mtime":1611503727393,"results":"38","hashOfConfig":"39"},{"size":49,"mtime":1612294061019,"results":"40","hashOfConfig":"29"},{"size":296,"mtime":1612349864545,"results":"41","hashOfConfig":"29"},{"size":2342,"mtime":1612350753502,"results":"42","hashOfConfig":"29"},{"size":874,"mtime":1612350730272,"results":"43","hashOfConfig":"29"},{"size":1431,"mtime":1612368438821,"results":"44","hashOfConfig":"29"},{"size":5641,"mtime":1612364879911,"results":"45","hashOfConfig":"29"},{"size":3145,"mtime":1612351123789,"results":"46","hashOfConfig":"29"},{"size":5697,"mtime":1612351424604,"results":"47","hashOfConfig":"29"},{"size":5637,"mtime":1612350290278,"results":"48","hashOfConfig":"29"},{"size":4640,"mtime":1612368757095,"results":"49","hashOfConfig":"29"},{"size":684,"mtime":1612350803415,"results":"50","hashOfConfig":"29"},{"size":2575,"mtime":1612350611037,"results":"51","hashOfConfig":"29"},{"size":302,"mtime":1612353786670,"results":"52","hashOfConfig":"29"},{"size":2484,"mtime":1612360327510,"results":"53","hashOfConfig":"29"},{"size":1578,"mtime":1612360305834,"results":"54","hashOfConfig":"29"},{"size":450,"mtime":1612367350515,"results":"55","hashOfConfig":"29"},{"size":510,"mtime":1612368239784,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"qdkfx2",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1948n22",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"H:\\blog\\blog\\src\\index.js",[],["119","120","121","122","123","124"],"H:\\blog\\blog\\src\\reportWebVitals.js",[],"H:\\blog\\blog\\src\\redux\\store.js",[],"H:\\blog\\blog\\src\\redux\\slices\\dataSlice.js",["125","126","127","128","129","130","131"],"import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\r\n\r\nimport dataAPI from 'api/Data';\r\nimport { NOT_AUTHORIZET } from '../../const/errors';\r\n\r\nimport {\r\n  GET_ARTICLES,\r\n  SET_PAGE, SET_VIEW_ARTICLE,\r\n  CREATE_ARTICLE,\r\n  UPDATE_ARTICLE,\r\n  DELETE_ARTICLE,\r\n  LIKE_ARTICLE,\r\n  CLEAR_DATA_ERRORS,\r\n} from '../../const/reducers';\r\n\r\nexport const getArticlesThunk = createAsyncThunk(GET_ARTICLES, async (page) => {\r\n  const data = await dataAPI.getArticles(page);\r\n  return data;\r\n});\r\n\r\nexport const createArticleThunk = createAsyncThunk(CREATE_ARTICLE, async (article) => {\r\n  const data = await dataAPI.createArticle(article);\r\n  return data;\r\n});\r\n\r\nexport const updateArticleThunk = createAsyncThunk(UPDATE_ARTICLE, async (parameters) => {\r\n  const data = await dataAPI.updateArticle(parameters);\r\n  return data;\r\n});\r\n\r\nexport const deleteArticleThunk = createAsyncThunk(DELETE_ARTICLE, async (slug) => {\r\n  const res = await dataAPI.deleteArticle(slug);\r\n  return res;\r\n});\r\n\r\nexport const likeArticleThunk = createAsyncThunk(LIKE_ARTICLE, async (slug) => {\r\n  const res = await dataAPI.likeArticle(slug);\r\n  return res;\r\n});\r\n\r\nexport const dataSlice = createSlice({\r\n  name: 'data',\r\n  initialState: {\r\n    page: 1,\r\n    totalPages: null,\r\n    isLoading: false,\r\n    articles: [],\r\n    viewArticle: null,\r\n    errors: null,\r\n  },\r\n  reducers: {\r\n    [CLEAR_DATA_ERRORS]: (state) => {\r\n      state.errors = null;\r\n    },\r\n    [SET_PAGE]: (state, action) => {\r\n      state.page = action.payload.page;\r\n    },\r\n    [SET_VIEW_ARTICLE]: (state, action) => {\r\n      state.viewArticle = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getArticlesThunk.pending]: (state) => {\r\n      if (!state.isLoading) {\r\n        state.isLoading = true;\r\n      }\r\n    },\r\n    [getArticlesThunk.fulfilled]: (state, action) => {\r\n      if (state.isLoading) {\r\n        state.articles = action.payload.articles;\r\n        state.totalPages = action.payload.articlesCount;\r\n        state.isLoading = false;\r\n        state.errors = null;\r\n        // console.log(state.articles);\r\n      }\r\n    },\r\n    [getArticlesThunk.rejected]: (state, action) => {\r\n      console.warn(action.error);\r\n      state.isLoading = false;\r\n    },\r\n    [createArticleThunk.fulfilled]: (state, action) => {\r\n      if (action.payload.errors) {\r\n        state.errors = action.payload;\r\n      } else {\r\n        state.errors = null;\r\n      }\r\n    },\r\n    [createArticleThunk.rejected]: (state, action) => {\r\n      console.warn(action.error);\r\n      state.errors = action.payload;\r\n    },\r\n    [updateArticleThunk.fulfilled]: (state, action) => {\r\n      if (action.payload.errors) {\r\n        console.log(action);\r\n        state.errors = action.payload;\r\n      } else {\r\n        state.errors = null;\r\n      }\r\n    },\r\n    [updateArticleThunk.rejected]: (state, action) => {\r\n      console.warn(action.error);\r\n      state.errors = action.payload;\r\n    },\r\n    [deleteArticleThunk.fulfilled]: (state, action) => {\r\n      if (action.payload.errors) {\r\n        console.log(action);\r\n        state.errors = action.payload;\r\n      } else {\r\n        state.viewArticle = null;\r\n        state.errors = null;\r\n      }\r\n    },\r\n    [deleteArticleThunk.rejected]: (state, action) => {\r\n      console.warn(action.error);\r\n      state.errors = action.payload;\r\n    },\r\n    [likeArticleThunk.fulfilled]: (state, action) => {\r\n      const stateCopy = JSON.parse(JSON.stringify(current(state.articles)));\r\n      const articleIndex = stateCopy.findIndex(\r\n        (e) => e.slug === action.payload.article.slug,\r\n      );\r\n      if (!stateCopy[articleIndex].favorited) {\r\n        stateCopy[articleIndex].favoritesCount += 1;\r\n      }\r\n      stateCopy[articleIndex].favorited = true;\r\n      state.articles = stateCopy;\r\n    },\r\n    [likeArticleThunk.rejected]: (state, action) => {\r\n      state.errors = NOT_AUTHORIZET;\r\n      console.warn(action.error);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPage, setViewArticle, clearDataErrors } = dataSlice.actions;\r\n\r\nexport default dataSlice.reducer;\r\n","H:\\blog\\blog\\src\\const\\reducers.js",[],"H:\\blog\\blog\\src\\api\\const.js",[],"H:\\blog\\blog\\src\\const\\path.js",[],"H:\\blog\\blog\\src\\redux\\slices\\authSlice.js",["132","133","134","135"],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport authAPI from 'api/Auth';\r\nimport { deleteCookie } from '../../util/deleteCookie';\r\nimport {\r\n  REGISTRATION, LOG_IN, GET_USER, CLEAR_AUTH_ERRORS, LOG_OUT, UPDATE_USER,\r\n} from '../../const/reducers';\r\n\r\nexport const registrationThunk = createAsyncThunk(REGISTRATION, async (user) => {\r\n  const authUserStatus = await authAPI.registration(user);\r\n  return authUserStatus;\r\n});\r\n\r\nexport const loginThunk = createAsyncThunk(LOG_IN, async (user) => {\r\n  const authUserStatus = await authAPI.login(user);\r\n  return authUserStatus;\r\n});\r\n\r\nexport const getUserThunk = createAsyncThunk(GET_USER, async () => {\r\n  const authUserStatus = await authAPI.getUser();\r\n  return authUserStatus;\r\n});\r\n\r\nexport const updateUserThunk = createAsyncThunk(UPDATE_USER, async (newUser) => {\r\n  const authUserStatus = await authAPI.updateUser(newUser);\r\n  return authUserStatus;\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    currentUser: null,\r\n    isLoading: false,\r\n    errors: null,\r\n  },\r\n  reducers: {\r\n    [CLEAR_AUTH_ERRORS]: (state) => {\r\n      state.errors = null;\r\n    },\r\n    [LOG_OUT]: (state) => {\r\n      deleteCookie('Token');\r\n      state.currentUser = null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [registrationThunk.pending]: (state) => {\r\n      if (!state.isLoading) {\r\n        state.isLoading = true;\r\n      }\r\n    },\r\n    [registrationThunk.fulfilled]: (state, action) => {\r\n      if (state.isLoading) {\r\n        state.isLoading = false;\r\n        if (!action.payload.errors) {\r\n          document.cookie = `Token=${action.payload.user.token}`;\r\n          state.currentUser = action.payload;\r\n          state.errors = null;\r\n        } else {\r\n          state.errors = action.payload;\r\n        }\r\n      }\r\n    },\r\n    [registrationThunk.rejected]: (state, action) => {\r\n      if (state.isLoading) {\r\n        console.warn(action.error);\r\n        state.isLoading = false;\r\n        state.errors = action.payload;\r\n      }\r\n    },\r\n    [loginThunk.pending]: (state) => {\r\n      if (!state.isLoading) {\r\n        state.isLoading = true;\r\n      }\r\n    },\r\n    [loginThunk.fulfilled]: (state, action) => {\r\n      if (state.isLoading) {\r\n        state.isLoading = false;\r\n        if (!action.payload.errors) {\r\n          document.cookie = `Token=${action.payload.user.token}`;\r\n          state.currentUser = action.payload.user;\r\n          state.errors = null;\r\n        } else {\r\n          state.errors = action.payload;\r\n        }\r\n      }\r\n    },\r\n    [loginThunk.rejected]: (state, action) => {\r\n      if (state.isLoading) {\r\n        console.warn(action.error);\r\n        state.isLoading = false;\r\n        state.errors = action.payload;\r\n      }\r\n    },\r\n    [getUserThunk.pending]: (state) => {\r\n      if (!state.isLoading) {\r\n        state.isLoading = true;\r\n      }\r\n    },\r\n    [getUserThunk.fulfilled]: (state, action) => {\r\n      if (state.isLoading) {\r\n        state.isLoading = false;\r\n        if (!action.payload.errors) {\r\n          state.currentUser = action.payload.user;\r\n          state.errors = null;\r\n        } else {\r\n          state.errors = action.payload;\r\n        }\r\n      }\r\n    },\r\n    [getUserThunk.rejected]: (state, action) => {\r\n      if (state.isLoading) {\r\n        console.warn(action.error);\r\n        state.isLoading = false;\r\n        state.errors = action.payload;\r\n      }\r\n    },\r\n    [updateUserThunk.pending]: (state) => {\r\n      if (!state.isLoading) {\r\n        state.isLoading = true;\r\n      }\r\n    },\r\n    [updateUserThunk.fulfilled]: (state, action) => {\r\n      if (state.isLoading) {\r\n        state.isLoading = false;\r\n        if (!action.payload.errors) {\r\n          const fields = Object.keys(action.payload.user);\r\n          const obj = fields.reduce((current, field) => {\r\n            if (action.payload.user[field] !== undefined) {\r\n              // console.log(`${field} - ${action.payload.user[field]}`);\r\n              current[`${field}`] = action.payload.user[field];\r\n            }\r\n            return current;\r\n          }, state.currentUser);\r\n          state.currentUser = obj;\r\n          state.errors = null;\r\n        } else {\r\n          state.errors = action.payload;\r\n        }\r\n      }\r\n    },\r\n    [updateUserThunk.rejected]: (state, action) => {\r\n      if (state.isLoading) {\r\n        console.warn(action.error);\r\n        state.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { clearAuthErrors, logOut } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","H:\\blog\\blog\\src\\util\\deleteCookie.js",[],"H:\\blog\\blog\\src\\util\\emailIsValid.js",[],"H:\\blog\\blog\\src\\const\\errors.js",[],"H:\\blog\\blog\\src\\App.jsx",[],"H:\\blog\\blog\\src\\components\\Header\\index.jsx",[],"H:\\blog\\blog\\src\\components\\Collection\\index.jsx",["136"],"import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Spin } from 'antd';\r\nimport Pagin from 'components/Pagin';\r\nimport Article from 'components/Article';\r\nimport { getArticlesThunk } from 'redux/slices/dataSlice';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Collection = () => {\r\n  const dispatch = useDispatch();\r\n  const context = useSelector((state) => state);\r\n  useEffect(() => {\r\n    dispatch(getArticlesThunk(context.data.page));\r\n  }, [context.data.page]);\r\n\r\n  return <div className={styles.collection}>\r\n    {context.data.isLoading ? <Spin size='large'/>\r\n      : <>\r\n      {\r\n      context.data.articles.map((article) => <Article\r\n        article={article}\r\n        key={article.title + article.createdAt}\r\n      />)\r\n      }\r\n    <Pagin/>\r\n    </>\r\n    }\r\n    </div>;\r\n};\r\nexport default Collection;\r\n","H:\\blog\\blog\\src\\components\\MainPage\\index.jsx",[],"H:\\blog\\blog\\src\\components\\Regist\\index.jsx",["137"],"/* eslint-disable prefer-promise-reject-errors */\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n} from 'antd';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { registrationThunk } from 'redux/slices/authSlice';\r\nimport { LOG_IN } from 'const/path';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Regist = () => {\r\n  const history = useHistory();\r\n  const context = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState({});\r\n  const [serverError, setServerError] = useState(false);\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n  useEffect(() => {\r\n    if (context.auth.errors === null && context.auth.currentUser !== null) { history.push('/'); }\r\n    if (context.auth.errors !== null) {\r\n      setServerError(true);\r\n    }\r\n  }, [context.auth.errors, context.auth.currentUser]);\r\n  const onFinish = (values) => {\r\n    if (!serverError && !context.auth.isLoading) {\r\n      dispatch(registrationThunk(values));\r\n    }\r\n    // console.log('Finish:', values);\r\n  };\r\n  return <div className={styles.registrContainer}>\r\n    <div className={styles.registrComponent}>\r\n    <header className={styles.header}>Create new account</header>\r\n    <Form\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n            whitespace: true,\r\n          },\r\n          {\r\n            min: 3,\r\n            message: 'Username must be at least 3 characters!',\r\n          },\r\n          {\r\n            max: 20,\r\n            message: 'Username must be maximum 20 characters!',\r\n          },\r\n        ]}\r\n      >\r\n        <div className={styles.inputContainer}>\r\n            <label htmlFor='user' className={styles.inputLabel}>username</label>\r\n            <Input readOnly onFocus={(e) => { e.target.removeAttribute('readonly'); }} type='text' id='user' onChange={() => { setServerError(false); }} placeholder={'Username'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <div className={styles.inputContainer}>\r\n          <label htmlFor='email'>E-mail</label>\r\n          <Input readOnly onFocus={(e) => { e.target.removeAttribute('readonly'); }} id='email' type='email' onChange={() => { setServerError(false); }} placeholder={'E-mail'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n          {\r\n            min: 6,\r\n            message: 'Password must be at least 6 characters!',\r\n          },\r\n          {\r\n            max: 40,\r\n            message: 'Password must be maximum 40 characters!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <div className={styles.inputContainer}>\r\n          <label htmlFor='password' className={styles.inputLabel}>Password</label>\r\n          <Input.Password readOnly onFocus={(e) => { e.target.removeAttribute('readonly'); }} id='password' onChange={() => { setServerError(false); }} placeholder={'Password'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"Confirm\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('passwords do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <div className={styles.inputContainer}>\r\n            <label className={styles.inputLabel}>Confirm</label>\r\n            <Input.Password readOnly onFocus={(e) => { e.target.removeAttribute('readonly'); }} placeholder={'Confirm Password'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        rules={[\r\n          {\r\n            validator: (_, value) => (value ? Promise.resolve() : Promise.reject('Should accept agreement')),\r\n          },\r\n        ]}\r\n      >\r\n        <div className={styles.checkboxInput}>\r\n            <Checkbox/>\r\n            <span className={styles.checkboxSpan}>\r\n                I agree to the processing of my personal information\r\n            </span>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <div className={styles.regButtonContainer}>\r\n            <Button className={styles.createButton} type=\"primary\" htmlType=\"submit\">\r\n             Create\r\n            </Button>\r\n        </div>\r\n      </Form.Item>\r\n    </Form>\r\n    <div className={styles.questionContainer}><span className={styles.question}>Already have an account?</span><Link to={`${LOG_IN}`}>Sign In.</Link></div>\r\n    <div className={styles.errorContainer}>\r\n          <span className={styles.error}>{ !context.auth.errors ? null : 'account with this email or usename exists'}</span>\r\n    </div>\r\n  </div>\r\n</div>;\r\n};\r\n\r\nexport default Regist;\r\n","H:\\blog\\blog\\src\\components\\Login\\index.jsx",["138","139"],"import {\r\n  Form, Input, Button,\r\n} from 'antd';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { REGISTRATION } from 'const/path';\r\nimport { loginThunk } from 'redux/slices/authSlice';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Login = () => {\r\n  const context = useSelector((state) => state);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [serverError, setServerError] = useState(false);\r\n  useEffect(() => {\r\n    if (context.auth.errors === null && context.auth.currentUser !== null) { history.push('/'); }\r\n    if (context.auth.errors !== null) {\r\n      setServerError(true);\r\n    }\r\n  }, [context.auth.errors, context.auth.currentUser]);\r\n  const onFinish = (values) => {\r\n    if (!serverError && !context.auth.isLoading) {\r\n      dispatch(loginThunk(values));\r\n    }\r\n    // console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return <div className={styles.loginContainer}>\r\n    <div className={styles.loginComponent}>\r\n        <header className={styles.header}>Sign In</header>\r\n        <Form\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        >\r\n        <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ]}\r\n        >\r\n            <div className={styles.inputContainer}>\r\n                <label htmlFor='email'>Email address</label>\r\n                <Input required id='email' onChange={() => { setServerError(false); }} placeholder={'Email address'}/>\r\n            </div>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n        >\r\n            <div className={styles.inputContainer}>\r\n                <label htmlFor='password'>Password</label>\r\n                <Input.Password required id='password' onChange={() => { setServerError(false); }} placeholder={'Password'}/>\r\n            </div>\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Button className={styles.loginButton} type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n            </Button>\r\n        </Form.Item>\r\n        </Form>\r\n        <div className={styles.questionContainer}>\r\n          <span className={styles.question}>Don’t have an account?</span><Link to={`${REGISTRATION}`}>Sign Up.</Link>\r\n        </div>\r\n        <div className={styles.errorContainer}>\r\n          <span className={styles.error}>{ !context.auth.errors ? null : 'email or password is invalid'}</span>\r\n        </div>\r\n    </div>\r\n</div>;\r\n};\r\n\r\nexport default Login;\r\n","H:\\blog\\blog\\src\\components\\Profile\\index.jsx",["140","141","142"],"/* eslint-disable prefer-promise-reject-errors */\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { updateUserThunk } from 'redux/slices/authSlice';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const context = useSelector((state) => state);\r\n  const [usename, setUsername] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [urlConfirm, setUrlConfirm] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState({});\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n  useEffect(() => {\r\n    if (context.auth.currentUser) {\r\n      setUsername(context.auth.currentUser.username);\r\n      setEmail(context.auth.currentUser.email);\r\n      setUrl(context.auth.currentUser.image ? context.auth.currentUser.image : '');\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  }, [context.auth.currentUser]);\r\n  const onFinish = (values) => {\r\n    dispatch(updateUserThunk(values)).then(() => { if (context.auth.errors === null) { history.push('/'); } });\r\n    console.log('Finish:', values);\r\n  };\r\n  const onChangeUrl = (event) => {\r\n    if (event.target.value === '') {\r\n      setUrlConfirm(null);\r\n    } else {\r\n      setUrlConfirm('validating');\r\n    }\r\n    setUrl(event.target.value);\r\n  };\r\n  return context.auth.currentUser ? <div className={styles.container}>\r\n    <div className={styles.profileComponent}>\r\n      <header className={styles.header}>Edit Profile</header>\r\n      <Form\r\n      className={styles.form}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n      >\r\n      <Form.Item\r\n        initialValue={context.auth.currentUser.username}\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            min: 3,\r\n            message: 'Username must be at least 3 characters!',\r\n          },\r\n          {\r\n            max: 20,\r\n            message: 'Username must be maximum 20 characters!',\r\n          },\r\n        ]}\r\n      >\r\n        <div className={styles.inputContainer}>\r\n            <label htmlFor='username' className={styles.inputLabel}>Username</label>\r\n            <Input\r\n              id='username'\r\n              value={usename}\r\n              onChange={(event) => { setUsername(event.target.value); }}\r\n              placeholder={'Username'}\r\n            />\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={context.auth.currentUser.email}\r\n        validateFirst\r\n        name=\"email\"\r\n         rules={[\r\n           {\r\n             required: true,\r\n             message: 'Please input your E-mail!',\r\n           },\r\n           {\r\n             type: 'email',\r\n             message: 'The input is not valid E-mail!',\r\n           },\r\n         ]}\r\n      >\r\n        <div className={styles.inputContainer}>\r\n          <label htmlFor='email'>Email address</label>\r\n          <Input\r\n           id='email'\r\n           value={email}\r\n           onChange={(event) => { setEmail(event.target.value); }}\r\n           placeholder={'E-mail'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={undefined}\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            min: 6,\r\n            message: 'Password must be at least 6 characters!',\r\n          },\r\n          {\r\n            max: 40,\r\n            message: 'Password must be maximum 40 characters!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <div className={styles.inputContainer}>\r\n          <label htmlFor='password' className={styles.inputLabel}>New password</label>\r\n          <Input\r\n           id='password'\r\n           value={`${password}`}\r\n           autoComplete='false'\r\n           onChange={(event) => { setPassword(event.target.value); }}\r\n           placeholder={'Password'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        initialValue={context.auth.currentUser.image}\r\n        name=\"image\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        validateTrigger={['onLoad', 'onChange', 'onError']}\r\n        validateStatus={\r\n          urlConfirm\r\n        }\r\n        rules={[\r\n          {\r\n            validator: (_, value) => {\r\n              console.log(value);\r\n              if (urlConfirm === 'success' || urlConfirm === null) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(urlConfirm);\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <div className={styles.inputContainer}>\r\n            <label htmlFor='url' className={styles.inputLabel}>Avatar image (url)</label>\r\n            <img\r\n              onError={(event) => { if (event.target.value !== '') { setUrlConfirm('error'); } }}\r\n              onLoad={() => { setUrlConfirm('success'); }}\r\n              className={styles.img} src={url || null} alt=''/>\r\n            <Input\r\n              id='url'\r\n              src={url || null}\r\n              value={url}\r\n              onChange={(event) => {\r\n                onChangeUrl(event);\r\n              }}\r\n              placeholder={'Avatar image'}/>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <div className={styles.saveButtonContainer}>\r\n            <Button className={styles.saveButton} type=\"primary\" htmlType=\"submit\">\r\n             Save\r\n            </Button>\r\n        </div>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n</div> : null;\r\n};\r\n\r\nexport default Profile;\r\n","H:\\blog\\blog\\src\\components\\ArticleInitPage\\index.jsx",[],"H:\\blog\\blog\\src\\components\\ArticleView\\index.jsx",[],"H:\\blog\\blog\\src\\components\\Pagin\\index.jsx",[],"H:\\blog\\blog\\src\\components\\Article\\index.jsx",[],["143","144","145","146","147","148"],"H:\\blog\\blog\\src\\util\\getCookie.js",[],"H:\\blog\\blog\\src\\api\\Data.js",[],"H:\\blog\\blog\\src\\api\\Auth.js",[],"H:\\blog\\blog\\src\\routes\\ProfilePrivateRoute.jsx",[],"H:\\blog\\blog\\src\\routes\\ArticleInitPagePrivateRoute.jsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":78,"column":7,"nodeType":"163","messageId":"164","endLine":78,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":89,"column":7,"nodeType":"163","messageId":"164","endLine":89,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":94,"column":9,"nodeType":"163","messageId":"164","endLine":94,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":101,"column":7,"nodeType":"163","messageId":"164","endLine":101,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":106,"column":9,"nodeType":"163","messageId":"164","endLine":106,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":114,"column":7,"nodeType":"163","messageId":"164","endLine":114,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":130,"column":7,"nodeType":"163","messageId":"164","endLine":130,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":65,"column":9,"nodeType":"163","messageId":"164","endLine":65,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":89,"column":9,"nodeType":"163","messageId":"164","endLine":89,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":112,"column":9,"nodeType":"163","messageId":"164","endLine":112,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":143,"column":9,"nodeType":"163","messageId":"164","endLine":143,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":15,"column":6,"nodeType":"167","endLine":15,"endColumn":25,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":31,"column":6,"nodeType":"167","endLine":31,"endColumn":53,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"169","line":22,"column":6,"nodeType":"167","endLine":22,"endColumn":53,"suggestions":"171"},{"ruleId":"161","severity":1,"message":"162","line":31,"column":5,"nodeType":"163","messageId":"164","endLine":31,"endColumn":16},{"ruleId":"165","severity":1,"message":"169","line":36,"column":6,"nodeType":"167","endLine":36,"endColumn":32,"suggestions":"172"},{"ruleId":"161","severity":1,"message":"162","line":39,"column":5,"nodeType":"163","messageId":"164","endLine":39,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":144,"column":15,"nodeType":"163","messageId":"164","endLine":144,"endColumn":26},{"ruleId":"149","replacedBy":"173"},{"ruleId":"151","replacedBy":"174"},{"ruleId":"153","replacedBy":"175"},{"ruleId":"155","replacedBy":"176"},{"ruleId":"157","replacedBy":"177"},{"ruleId":"159","replacedBy":"178"},"lines-around-directive",["179"],"no-spaced-func",["180"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["182"],["183"],["184"],["179"],["180"],[],[],[],[],"padding-line-between-statements","func-call-spacing",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [context.data.page, dispatch]",{"range":"192","text":"193"},"Update the dependencies array to be: [context.auth.errors, context.auth.currentUser, history]",{"range":"194","text":"195"},{"range":"196","text":"195"},"Update the dependencies array to be: [context.auth.currentUser, history]",{"range":"197","text":"198"},[504,523],"[context.data.page, dispatch]",[955,1002],"[context.auth.errors, context.auth.currentUser, history]",[754,801],[1166,1192],"[context.auth.currentUser, history]"]